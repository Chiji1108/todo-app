/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/todos/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Returns a todo by id */
        200: {
          content: {
            "application/json": components["schemas"]["Todo"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description Deletes a todo */
        200: {
          content: {
            "application/json": {
              ok: boolean;
            };
          };
        };
      };
    };
    patch: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            /** @example false */
            completed?: boolean;
            /** @example shopping */
            title?: string;
          };
        };
      };
      responses: {
        /** @description Updates a todo */
        200: {
          content: {
            "application/json": components["schemas"]["Todo"];
          };
        };
      };
    };
  };
  "/todos": {
    get: {
      responses: {
        /** @description Returns all todos */
        200: {
          content: {
            "application/json": components["schemas"]["Todo"][];
          };
        };
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": {
            /** @example shopping */
            title: string;
          };
        };
      };
      responses: {
        /** @description Creates a new todo */
        200: {
          content: {
            "application/json": components["schemas"]["Todo"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Todo: {
      /** @example 12 */
      id: number;
      /** @example shopping */
      title: string;
      /** @example false */
      completed: boolean;
    } | null;
  };
  responses: never;
  parameters: {
  };
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
